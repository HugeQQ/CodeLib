{"remainingRequest":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\netmodular-module-admin\\src\\views\\menu\\components\\tree\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\netmodular-module-admin\\src\\views\\menu\\components\\tree\\index.vue","mtime":1706623138826},{"path":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706623138253},{"path":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\babel-loader\\lib\\index.js","mtime":1706623138119},{"path":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706623138253},{"path":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\vue-loader\\lib\\index.js","mtime":1706623133543}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpjb25zdCBhcGkgPSAkYXBpLmFkbWluLm1lbnUNCmV4cG9ydCBkZWZhdWx0IHsNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgdHJlZTogew0KICAgICAgICBkYXRhOiBbXSwNCiAgICAgICAgbm9kZUtleTogJ2lkJywNCiAgICAgICAgaGlnaGxpZ2h0Q3VycmVudDogdHJ1ZSwNCiAgICAgICAgcHJvcHM6IHsgY2hpbGRyZW46ICdjaGlsZHJlbicsIGxhYmVsOiAnbGFiZWwnIH0sDQogICAgICAgIGN1cnJlbnROb2RlS2V5OiAnMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwJywNCiAgICAgICAgZXhwYW5kT25DbGlja05vZGU6IGZhbHNlLA0KICAgICAgICBkZWZhdWx0RXhwYW5kZWRLZXlzOiBbJzAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCddDQogICAgICB9LA0KICAgICAgb246IHsNCiAgICAgICAgJ2N1cnJlbnQtY2hhbmdlJzogdGhpcy5vbkNoYW5nZSwNCiAgICAgICAgJ25vZGUtZXhwYW5kJzogdGhpcy5vbk5vZGVFeHBhbmQsDQogICAgICAgICdub2RlLWNvbGxhcHNlJzogdGhpcy5vbk5vZGVDb2xsYXBzZSwNCiAgICAgICAgJ2NoZWNrLWNoYW5nZSc6IHRoaXMub25DaGVja0NoYW5nZSwNCiAgICAgICAgY2hlY2s6IHRoaXMub25DaGVjaw0KICAgICAgfSwNCiAgICAgIHNlbGVjdGlvbjogbnVsbA0KICAgIH0NCiAgfSwNCiAgcHJvcHM6IHsNCiAgICAvL+WIm+W7uuaXtuWIt+aWsA0KICAgIHJlZnJlc2hPbkNyZWF0ZWQ6IHsNCiAgICAgIHR5cGU6IEJvb2xlYW4sDQogICAgICBkZWZhdWx0OiB0cnVlDQogICAgfSwNCiAgICBzaG93Q2hlY2tib3g6IEJvb2xlYW4sDQogICAgZGVmYXVsdEV4cGFuZEFsbDogQm9vbGVhbg0KICB9LA0KICBtZXRob2RzOiB7DQogICAgLy/liLfmlrANCiAgICByZWZyZXNoKGluaXQpIHsNCiAgICAgIGFwaS5nZXRUcmVlKCkudGhlbihkYXRhID0+IHsNCiAgICAgICAgdGhpcy50cmVlLmRhdGEgPSBbZGF0YV0NCiAgICAgICAgaWYgKGluaXQpIHsNCiAgICAgICAgICAvL+WIneWni+WMluinpuWPkeS4gOasoWNoYW5nZeS6i+S7tg0KICAgICAgICAgIHRoaXMub25DaGFuZ2UoZGF0YSkNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAvL+WIt+aWsOimgeS/neeVmeW9k+WJjeeCueWHu+iKgueCuQ0KICAgICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsNCiAgICAgICAgICAgIHRoaXMuJHJlZnMudHJlZS5zZXRDdXJyZW50S2V5KHRoaXMudHJlZS5jdXJyZW50Tm9kZUtleSkNCiAgICAgICAgICB9KQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0sDQogICAgb25DaGFuZ2UoZGF0YSwgbm9kZSkgew0KICAgICAgaWYgKHRoaXMuc2VsZWN0aW9uID09PSBkYXRhKSByZXR1cm4NCg0KICAgICAgdGhpcy50cmVlLmN1cnJlbnROb2RlS2V5ID0gZGF0YS5pZA0KICAgICAgdGhpcy5zZWxlY3Rpb24gPSBkYXRhDQogICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCB0aGlzLnNlbGVjdGlvbiwgbm9kZSkNCiAgICB9LA0KICAgIG9uQ2hlY2soZGF0YSwgY2hlY2tlZE9iamVjdCkgew0KICAgICAgdGhpcy4kZW1pdCgnY2hlY2snLCBkYXRhLCBjaGVja2VkT2JqZWN0KQ0KICAgIH0sDQogICAgb25DaGVja0NoYW5nZShkYXRhLCBjaGVja2VkKSB7DQogICAgICB0aGlzLiRlbWl0KCdjaGVjay1jaGFuZ2UnLCBkYXRhLCBjaGVja2VkKQ0KICAgIH0sDQogICAgb25Ob2RlRXhwYW5kKGRhdGEpIHsNCiAgICAgIC8v6K6w5b2V5bGV5byA55qE6IqC54K5DQogICAgICB0aGlzLnRyZWUuZGVmYXVsdEV4cGFuZGVkS2V5cy5wdXNoKGRhdGEuaWQpDQogICAgfSwNCiAgICBvbk5vZGVDb2xsYXBzZShkYXRhKSB7DQogICAgICAvL+enu+mZpOWxleW8gOeahOiKgueCuQ0KICAgICAgdGhpcy4kXy5wdWxsKHRoaXMudHJlZS5kZWZhdWx0RXhwYW5kZWRLZXlzLCBkYXRhLmlkKQ0KICAgIH0sDQogICAgLyoq5o+S5YWlICovDQogICAgaW5zZXJ0KGRhdGEpIHsNCiAgICAgIGRhdGEucGF0aCA9IHRoaXMuc2VsZWN0aW9uLnBhdGguY29uY2F0KFtkYXRhLmxhYmVsXSkNCg0KICAgICAgLy/orr7nva7lrZDoioLngrkNCiAgICAgIGlmICghZGF0YS5jaGlsZHJlbikgew0KICAgICAgICBkYXRhLmNoaWxkcmVuID0gW10NCiAgICAgIH0NCg0KICAgICAgbGV0IGNoaWxkcmVuID0gdGhpcy5zZWxlY3Rpb24uY2hpbGRyZW4NCiAgICAgIC8v5aaC5p6c5LiN5YyF5ZCr5a2Q6IqC54K577yM55u05o6lcHVzaA0KICAgICAgaWYgKGNoaWxkcmVuLmxlbmd0aCA8IDEpIHsNCiAgICAgICAgY2hpbGRyZW4ucHVzaChkYXRhKQ0KICAgICAgICByZXR1cm4NCiAgICAgIH0NCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgaWYgKGRhdGEuaXRlbS5zb3J0IDwgY2hpbGRyZW5baV0uaXRlbS5zb3J0KSB7DQogICAgICAgICAgY2hpbGRyZW4uc3BsaWNlKGksIDAsIGRhdGEpDQogICAgICAgICAgYnJlYWsNCiAgICAgICAgfQ0KDQogICAgICAgIC8v5aaC5p6c5piv5pyA5ZCO5LiA5Liq77yM5YiZ6ZmE5Yqg5Yiw5pyA5ZCO5LiA5Liq6IqC54K55ZCO6Z2iDQogICAgICAgIGlmIChpID09PSBjaGlsZHJlbi5sZW5ndGggLSAxKSB7DQogICAgICAgICAgY2hpbGRyZW4ucHVzaChkYXRhKQ0KICAgICAgICAgIGJyZWFrDQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIC8qKuWIoOmZpCAqLw0KICAgIHJlbW92ZShpZCkgew0KICAgICAgbGV0IGNoaWxkcmVuID0gdGhpcy5zZWxlY3Rpb24uY2hpbGRyZW4NCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgbGV0IGNoaWxkID0gY2hpbGRyZW5baV0NCiAgICAgICAgaWYgKGlkID09PSBjaGlsZC5pZCkgew0KICAgICAgICAgIGNoaWxkcmVuLnNwbGljZShpLCAxKQ0KICAgICAgICAgIHJldHVybiBjaGlsZA0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICAvKirmm7TmlrAgKi8NCiAgICB1cGRhdGUobW9kZWwpIHsNCiAgICAgIC8v5YWI5Yik5pat5piv5ZCm5bGV5byALOW3suWxleW8gOeahOWFiOWIoOmZpA0KICAgICAgbGV0IGV4cGFuZGVkID0gdGhpcy4kcmVmcy50cmVlLmdldE5vZGUobW9kZWwuaWQpLmV4cGFuZGVkDQogICAgICBpZiAoIWV4cGFuZGVkKSB7DQogICAgICAgIHRoaXMuJF8ucHVsbCh0aGlzLnRyZWUuZGVmYXVsdEV4cGFuZGVkS2V5cywgbW9kZWwuaWQpDQogICAgICB9DQogICAgICAvL+S/neWtmOWOn+adpeeahOWtkOiKgueCue+8jOWQjOaXtuWFiOWIoOmZpO+8jOWGjea3u+WKoO+8jOi/meagt+WPr+S7peS/neivgeaOkuW6jw0KICAgICAgbW9kZWwuY2hpbGRyZW4gPSB0aGlzLnJlbW92ZShtb2RlbC5pZCkuY2hpbGRyZW4NCiAgICAgIHRoaXMuaW5zZXJ0KG1vZGVsKQ0KICAgICAgLy/oi6XmmK/lsZXlvIDnirbmgIHopoHlho3mrKHlsZXlvIANCiAgICAgIGlmIChleHBhbmRlZCkgew0KICAgICAgICB0aGlzLnRyZWUuZGVmYXVsdEV4cGFuZGVkS2V5cy5wdXNoKG1vZGVsLmlkKQ0KICAgICAgfQ0KICAgIH0sDQogICAgc2V0Q2hlY2tlZEtleXMoY2hlY2tlZEtleXMpIHsNCiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsNCiAgICAgICAgaWYgKHRoaXMuc2hvd0NoZWNrYm94KSB7DQogICAgICAgICAgdGhpcy4kcmVmcy50cmVlLnNldENoZWNrZWRLZXlzKGNoZWNrZWRLZXlzKQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0sDQogICAgLyoq5o6S5bqP77yM6YeN5paw5Yi35pawICovDQogICAgc29ydCgpIHsNCiAgICAgIHRoaXMucmVmcmVzaCgpDQogICAgfQ0KICB9LA0KICBjcmVhdGVkKCkgew0KICAgIGlmICh0aGlzLnJlZnJlc2hPbkNyZWF0ZWQpIHsNCiAgICAgIHRoaXMucmVmcmVzaCh0cnVlKQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"node_modules/netmodular-module-admin/src/views/menu/components/tree","sourcesContent":["<template>\r\n  <nm-box page header refresh title=\"菜单预览\" icon=\"menu\" @refresh=\"refresh\">\r\n    <el-tree class=\"nm-tree\" ref=\"tree\" v-bind=\"tree\" :show-checkbox=\"showCheckbox\" :default-expand-all=\"defaultExpandAll\" v-on=\"on\">\r\n      <span slot-scope=\"{ data }\">\r\n        <nm-icon :name=\"data.item.icon || 'attachment'\" />\r\n        <span class=\"nm-m-l-5\">{{ data.label }}</span>\r\n      </span>\r\n    </el-tree>\r\n  </nm-box>\r\n</template>\r\n<script>\r\nconst api = $api.admin.menu\r\nexport default {\r\n  data() {\r\n    return {\r\n      tree: {\r\n        data: [],\r\n        nodeKey: 'id',\r\n        highlightCurrent: true,\r\n        props: { children: 'children', label: 'label' },\r\n        currentNodeKey: '00000000-0000-0000-0000-000000000000',\r\n        expandOnClickNode: false,\r\n        defaultExpandedKeys: ['00000000-0000-0000-0000-000000000000']\r\n      },\r\n      on: {\r\n        'current-change': this.onChange,\r\n        'node-expand': this.onNodeExpand,\r\n        'node-collapse': this.onNodeCollapse,\r\n        'check-change': this.onCheckChange,\r\n        check: this.onCheck\r\n      },\r\n      selection: null\r\n    }\r\n  },\r\n  props: {\r\n    //创建时刷新\r\n    refreshOnCreated: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    showCheckbox: Boolean,\r\n    defaultExpandAll: Boolean\r\n  },\r\n  methods: {\r\n    //刷新\r\n    refresh(init) {\r\n      api.getTree().then(data => {\r\n        this.tree.data = [data]\r\n        if (init) {\r\n          //初始化触发一次change事件\r\n          this.onChange(data)\r\n        } else {\r\n          //刷新要保留当前点击节点\r\n          this.$nextTick(() => {\r\n            this.$refs.tree.setCurrentKey(this.tree.currentNodeKey)\r\n          })\r\n        }\r\n      })\r\n    },\r\n    onChange(data, node) {\r\n      if (this.selection === data) return\r\n\r\n      this.tree.currentNodeKey = data.id\r\n      this.selection = data\r\n      this.$emit('change', this.selection, node)\r\n    },\r\n    onCheck(data, checkedObject) {\r\n      this.$emit('check', data, checkedObject)\r\n    },\r\n    onCheckChange(data, checked) {\r\n      this.$emit('check-change', data, checked)\r\n    },\r\n    onNodeExpand(data) {\r\n      //记录展开的节点\r\n      this.tree.defaultExpandedKeys.push(data.id)\r\n    },\r\n    onNodeCollapse(data) {\r\n      //移除展开的节点\r\n      this.$_.pull(this.tree.defaultExpandedKeys, data.id)\r\n    },\r\n    /**插入 */\r\n    insert(data) {\r\n      data.path = this.selection.path.concat([data.label])\r\n\r\n      //设置子节点\r\n      if (!data.children) {\r\n        data.children = []\r\n      }\r\n\r\n      let children = this.selection.children\r\n      //如果不包含子节点，直接push\r\n      if (children.length < 1) {\r\n        children.push(data)\r\n        return\r\n      }\r\n      for (let i = 0; i < children.length; i++) {\r\n        if (data.item.sort < children[i].item.sort) {\r\n          children.splice(i, 0, data)\r\n          break\r\n        }\r\n\r\n        //如果是最后一个，则附加到最后一个节点后面\r\n        if (i === children.length - 1) {\r\n          children.push(data)\r\n          break\r\n        }\r\n      }\r\n    },\r\n    /**删除 */\r\n    remove(id) {\r\n      let children = this.selection.children\r\n      for (let i = 0; i < children.length; i++) {\r\n        let child = children[i]\r\n        if (id === child.id) {\r\n          children.splice(i, 1)\r\n          return child\r\n        }\r\n      }\r\n    },\r\n    /**更新 */\r\n    update(model) {\r\n      //先判断是否展开,已展开的先删除\r\n      let expanded = this.$refs.tree.getNode(model.id).expanded\r\n      if (!expanded) {\r\n        this.$_.pull(this.tree.defaultExpandedKeys, model.id)\r\n      }\r\n      //保存原来的子节点，同时先删除，再添加，这样可以保证排序\r\n      model.children = this.remove(model.id).children\r\n      this.insert(model)\r\n      //若是展开状态要再次展开\r\n      if (expanded) {\r\n        this.tree.defaultExpandedKeys.push(model.id)\r\n      }\r\n    },\r\n    setCheckedKeys(checkedKeys) {\r\n      this.$nextTick(() => {\r\n        if (this.showCheckbox) {\r\n          this.$refs.tree.setCheckedKeys(checkedKeys)\r\n        }\r\n      })\r\n    },\r\n    /**排序，重新刷新 */\r\n    sort() {\r\n      this.refresh()\r\n    }\r\n  },\r\n  created() {\r\n    if (this.refreshOnCreated) {\r\n      this.refresh(true)\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}