{"remainingRequest":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\netmodular-ui\\packages\\components\\list\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\netmodular-ui\\packages\\components\\list\\index.vue","mtime":1706623144441},{"path":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706623138253},{"path":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\babel-loader\\lib\\index.js","mtime":1706623138119},{"path":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706623138253},{"path":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\vue-loader\\lib\\index.js","mtime":1706623133543}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAufile":"index.vue","sourceRoot":"node_modules/netmodular-ui/packages/components/list","sourcesContent":["<template>\r\n  <section :class=\"class_\" v-loading=\"showLoading\" :element-loading-text=\"loadingText || loadingText_\" :element-loading-background=\"loadingBackground\" :element-loading-spinner=\"loadingSpinner\">\r\n    <!--header-->\r\n    <query-header\r\n      v-if=\"!noHeader\"\r\n      :title=\"title\"\r\n      :icon=\"icon\"\r\n      :no-fullscreen=\"noFullscreen\"\r\n      :fullscreen=\"fullscreen\"\r\n      :no-refresh=\"noRefresh\"\r\n      :export-enabled=\"exportOptions_.enabled && exportOptions_.btnLocation !== 'querybar'\"\r\n      :exportBtnCode=\"exportOptions_.btnCode\"\r\n    >\r\n      <template v-slot:toolbar>\r\n        <slot name=\"header-toolbar\" :total=\"total\" :selection=\"selection\" />\r\n      </template>\r\n    </query-header>\r\n\r\n    <!--查询栏-->\r\n    <querybar\r\n      ref=\"querybar\"\r\n      v-if=\"!noQuerybar\"\r\n      :model=\"model\"\r\n      :rules=\"rules\"\r\n      :input-width=\"inputWidth\"\r\n      :advanced=\"advanced\"\r\n      :no-search=\"noSearch\"\r\n      :no-reset=\"noReset\"\r\n      :export-enabled=\"exportOptions_.enabled && exportOptions_.btnLocation === 'querybar'\"\r\n      :export-btn-code=\"exportOptions_.btnCode\"\r\n      @reset=\"onQueryBarReset\"\r\n    >\r\n      <template v-slot>\r\n        <slot name=\"querybar\" />\r\n      </template>\r\n      <template v-slot:buttons>\r\n        <slot name=\"querybar-buttons\" :total=\"total\" :selection=\"selection\" />\r\n      </template>\r\n      <template v-slot:advanced>\r\n        <slot name=\"querybar-advanced\" />\r\n      </template>\r\n    </querybar>\r\n\r\n    <section class=\"nm-list-body\">\r\n      <query-table\r\n        ref=\"table\"\r\n        :rows=\"rows\"\r\n        :cols=\"cols\"\r\n        :span-method=\"spanMethod\"\r\n        :selection=\"selection\"\r\n        :row-key=\"rowKey\"\r\n        :tree-props=\"treeProps\"\r\n        :default-expand-all=\"defaultExpandAll\"\r\n        :no-clear-selection=\"noClearSelection\"\r\n        :show-summary=\"showSummary\"\r\n        :sum-text=\"sumText\"\r\n        :summary-method=\"summaryMethod\"\r\n      >\r\n        <!-- 多选 -->\r\n        <el-table-column v-if=\"multiple\" fixed=\"left\" align=\"center\" type=\"selection\" width=\"55\" />\r\n\r\n        <!-- 序号 -->\r\n        <el-table-column v-if=\"showNo\" fixed=\"left\" align=\"center\" type=\"index\" :index=\"getNo\">\r\n          <template v-slot:header>\r\n            <slot name=\"col-no-header\">{{ serialNumberName || '#' }}</slot>\r\n          </template>\r\n          <template slot-scope=\"{ row, $index }\">\r\n            <div class=\"nm-list-no\">\r\n              <slot name=\"col-no\" :row=\"row\">{{ getNo($index) }}</slot>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <!-- 自动生成列 -->\r\n        <template v-for=\"(col, i) in columns\">\r\n          <el-table-column\r\n            v-if=\"col.show\"\r\n            :key=\"i\"\r\n            :prop=\"col.name\"\r\n            :width=\"col.width\"\r\n            :sortable=\"col.sortable\"\r\n            :type=\"col.type\"\r\n            :fixed=\"col.fixed\"\r\n            :align=\"col.align\"\r\n            :header-align=\"col.headerAlign\"\r\n            :show-overflow-tooltip=\"col.showOverflowTooltip\"\r\n          >\r\n            <!--自定义头-->\r\n            <template v-slot:header>\r\n              <slot :name=\"`col-${col.name}-header`\">\r\n                <nm-icon v-if=\"col.icon\" :name=\"col.icon\" />\r\n                {{ col.label }}\r\n              </slot>\r\n            </template>\r\n\r\n            <template slot-scope=\"{ row }\">\r\n              <slot :name=\"'col-' + col.name\" :row=\"row\" :rows=\"rows\">{{ format(row, col) }}</slot>\r\n            </template>\r\n          </el-table-column>\r\n        </template>\r\n\r\n        <!-- 操作列 -->\r\n        <el-table-column v-if=\"!noOperation\" :width=\"operationWidth\" fixed=\"right\" align=\"center\" label=\"操作\">\r\n          <template v-slot:header>\r\n            <slot name=\"col-operation-header\">操作</slot>\r\n          </template>\r\n          <template slot-scope=\"{ row }\">\r\n            <div class=\"nm-list-operation\">\r\n              <slot name=\"col-operation\" :row=\"row\" :rows=\"rows\" />\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n      </query-table>\r\n    </section>\r\n\r\n    <!--footer-->\r\n    <query-footer\r\n      v-if=\"!noFooter\"\r\n      v-model=\"page\"\r\n      :page-sizes=\"pageSizes\"\r\n      :total=\"total\"\r\n      :columns.sync=\"columns\"\r\n      :no-select-column=\"noSelectColumn\"\r\n      :no-search-button-icon=\"noSearchButtonIcon\"\r\n      :reverse=\"footerReverse\"\r\n    >\r\n      <slot name=\"footer\" :total=\"total\" :selection=\"selection\" :data=\"data\" />\r\n    </query-footer>\r\n    <slot />\r\n\r\n    <!--导出-->\r\n    <query-export v-if=\"exportAdvancedEnabled\" :options=\"exportOptions_\" :list-title=\"title\" :cols=\"columns\" :visible.sync=\"showExport\" />\r\n  </section>\r\n</template>\r\n<script>\r\nimport { mapState } from 'vuex'\r\nimport def from './default.js'\r\nimport QueryHeader from './components/header'\r\nimport Querybar from './components/querybar'\r\nimport QueryTable from './components/table'\r\nimport QueryFooter from './components/footer'\r\nimport QueryExport from './components/export'\r\n\r\nexport default {\r\n  name: 'List',\r\n  components: { QueryHeader, Querybar, QueryTable, QueryFooter, QueryExport },\r\n  data() {\r\n    return {\r\n      loading_: false,\r\n      fullscreen: false,\r\n      // 分页数据\r\n      page: {\r\n        index: 1,\r\n        size: this.pageSizes[0],\r\n        sort: []\r\n      },\r\n      // 数据列表\r\n      rows: [],\r\n      // 扩展数据\r\n      data: '',\r\n      // 总数量\r\n      total: 0,\r\n      selection: [],\r\n      showExport: false,\r\n      columns: []\r\n    }\r\n  },\r\n  props: {\r\n    /** 标题 */\r\n    title: String,\r\n    /** 图标 */\r\n    icon: String,\r\n    // 查询方法\r\n    action: {\r\n      type: Function,\r\n      required: true\r\n    },\r\n    /** 查询表单输入框宽度 */\r\n    inputWidth: String,\r\n    // 模型\r\n    model: Object,\r\n    /** 模型验证规则 */\r\n    rules: Object,\r\n    /** 高级查询 */\r\n    advanced: Object,\r\n    // 列数组\r\n    cols: {\r\n      type: Array,\r\n      default() {\r\n        return []\r\n      }\r\n    },\r\n    /** 多选 */\r\n    multiple: Boolean,\r\n    /** 显示序号 */\r\n    showNo: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    /** 不显示操作列 */\r\n    noOperation: Boolean,\r\n    /** 操作列宽度 */\r\n    operationWidth: [String, Number],\r\n    /** 不显示选择列按钮 */\r\n    noSelectColumn: Boolean,\r\n    /** 不显示查询栏 */\r\n    noQuerybar: Boolean,\r\n    /** 不显示全屏按钮 */\r\n    noFullscreen: Boolean,\r\n    /** 不显示刷新按钮 */\r\n    noRefresh: Boolean,\r\n    /** 不显示头部 */\r\n    noHeader: Boolean,\r\n    /** 不显示底部 */\r\n    noFooter: Boolean,\r\n    /** 不包含搜索功能 */\r\n    noSearch: Boolean,\r\n    /** 不显示查询按钮图标 */\r\n    noSearchButtonIcon: Boolean,\r\n    /**不显示重置按钮 */\r\n    noReset: Boolean,\r\n    /** 底部反转 */\r\n    footerReverse: Boolean,\r\n    /** 合并行列的方法 */\r\n    spanMethod: Function,\r\n    /** 加载中动画 */\r\n    loading: Boolean,\r\n    /** 加载中文本 */\r\n    loadingText: String,\r\n    /** 创建后执行一次查询 */\r\n    queryOnCreated: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    /**导出配置 */\r\n    exportOptions: Object,\r\n    /** 页数选择项 */\r\n    pageSizes: {\r\n      type: Array,\r\n      default() {\r\n        return [10, 15, 50, 100]\r\n      }\r\n    },\r\n    /**渲染嵌套数据的配置选项 */\r\n    treeProps: Object,\r\n    /*行数据的 Key，用来优化 Table 的渲染；\r\n    在使用 reserve-selection 功能与显示树形数据时，该属性是必填的。\r\n    类型为 String 时，支持多层访问：user.info.id，但不支持 user.info[0].id，此种情况请使用 Function。*/\r\n    rowKey: [Function, String],\r\n    /*是否懒加载子节点数据*/\r\n    lazy: Boolean,\r\n    /**加载子节点数据的函数，lazy 为 true 时生效，函数第二个参数包含了节点的层级信息 */\r\n    load: Function,\r\n    /**是否默认展开所有行，当 Table 包含展开行存在或者为树形表格时有效 */\r\n    defaultExpandAll: Boolean,\r\n    /**当刷新时不清空已选择数据 */\r\n    noClearSelection: Boolean,\r\n    /**是否显示合计行 */\r\n    showSummary: Boolean,\r\n    /**合计行文本 */\r\n    sumText: String,\r\n    /**合计行自定义逻辑方法 */\r\n    summaryMethod: Function\r\n  },\r\n  computed: {\r\n    ...mapState('app/loading', { loadingText_: 'text', loadingBackground: 'background', loadingSpinner: 'spinner' }),\r\n    ...mapState('app/config', { serialNumberName: s => s.component.list.serialNumberName }),\r\n    class_() {\r\n      return ['nm-list', this.fontSize ? `nm-list-${this.fontSize}` : '', this.fullscreen ? 'fullscreen' : '']\r\n    },\r\n    showLoading() {\r\n      return this.loading || this.loading_\r\n    },\r\n    exportOptions_() {\r\n      return this.$_.assignIn({ title: this.title }, def.exportOptions, this.exportOptions)\r\n    },\r\n    exportAdvancedEnabled() {\r\n      return this.exportOptions_.enabled && this.exportOptions_.advanced\r\n    }\r\n  },\r\n  methods: {\r\n    /** 查询方法 */\r\n    query() {\r\n      if (this.$refs.querybar) {\r\n        this.$refs.querybar.validate(() => {\r\n          this.doQuery()\r\n        })\r\n      } else {\r\n        this.doQuery()\r\n      }\r\n    },\r\n    doQuery() {\r\n      if (this.loading_) {\r\n        return\r\n      }\r\n\r\n      this.loading_ = true\r\n      let fullModel = Object.assign({}, this.model)\r\n\r\n      // 设置分页\r\n      fullModel.page = this.page\r\n\r\n      this.action(fullModel)\r\n        .then(data => {\r\n          this.rows = data.rows\r\n          this.total = data.total\r\n          this.data = data.data\r\n\r\n          // 回到顶部\r\n          this.$refs.table.scrollTop()\r\n          // 重新绘制布局\r\n          this.$refs.table.doLayout()\r\n          this.loading_ = false\r\n\r\n          if (this.noClearSelection) {\r\n            this.$nextTick(() => {\r\n              this.rows.forEach(m => {\r\n                if (!this.selection.every(n => n.id !== m.id)) {\r\n                  this.$refs.table.toggleRowSelection(m, true)\r\n                }\r\n              })\r\n            })\r\n          }\r\n          // 查询事件\r\n          this.$emit('query', data)\r\n        })\r\n        .catch(() => {\r\n          this.loading_ = false\r\n        })\r\n    },\r\n    export_(exportModel) {\r\n      if (!exportModel.columns || exportModel.columns.length < 1) {\r\n        this._error('请选择要导出的列')\r\n        return\r\n      }\r\n      if (!this.exportOptions_.action) {\r\n        this._error('未设置导出方法')\r\n        return\r\n      }\r\n\r\n      this._openLoading('正在导出数据，请稍后...')\r\n\r\n      let model = Object.assign({}, this.model)\r\n\r\n      // 设置分页\r\n      model.page = this.page\r\n      //设置导出信息\r\n      model.export = exportModel\r\n      this.exportOptions_\r\n        .action(model)\r\n        .then(() => {\r\n          this._closeLoading()\r\n        })\r\n        .catch(() => {\r\n          this._closeLoading()\r\n        })\r\n    },\r\n    /** 刷新 */\r\n    refresh(goFirst) {\r\n      if (goFirst) this.page.index = 1\r\n      this.query()\r\n    },\r\n    /** 查询表单重置 */\r\n    reset() {\r\n      this.$refs.querybar.reset()\r\n    },\r\n    /** 获取序号 */\r\n    getNo(index) {\r\n      return (this.page.index - 1) * this.page.size + index + 1\r\n    },\r\n    // 重新绘制布局\r\n    doLayout() {\r\n      this.$refs.table.doLayout()\r\n    },\r\n    /** 全屏切换 */\r\n    triggerFullscreen() {\r\n      this.fullscreen ? this.closeFullscreen() : this.openFullscreen()\r\n      this.doLayout()\r\n    },\r\n    /** 开启全屏 */\r\n    openFullscreen() {\r\n      this.fullscreen = true\r\n      this.$emit('fullscreen-change', this.fullscreen)\r\n    },\r\n    /** 关闭全屏 */\r\n    closeFullscreen() {\r\n      this.fullscreen = false\r\n      this.$emit('fullscreen-change', this.fullscreen)\r\n    },\r\n    /** 切换导出对话框显示状态 */\r\n    triggerExport() {\r\n      let exp = this.exportOptions_\r\n      //未启用高级，直接执行导出操作\r\n      if (!exp.advanced) {\r\n        const { format, mode, showTitle, showCopyright, showColName, showExportDate, showExportPeople } = exp\r\n\r\n        let model = { format, mode, showTitle, showCopyright, showColName, showExportDate, showExportPeople }\r\n        model.title = this.title\r\n        model.fileName = `${this.title}_${this.$dayjs().format('YYYYMMDDHHmmss')}`\r\n        model.columns = []\r\n\r\n        this.columns.forEach(m => {\r\n          if (m.show) {\r\n            model.columns.push(this.listCol2ExportCol(m))\r\n          }\r\n        })\r\n\r\n        this.export_(model)\r\n      }\r\n\r\n      this.showExport ? this.closeExport() : this.openExport()\r\n    },\r\n    /** 打开导出对话框 */\r\n    openExport() {\r\n      this.showExport = true\r\n      this.$emit('export-change', this.showExport)\r\n    },\r\n    closeExport() {\r\n      this.showExport = false\r\n      this.$emit('export-change', this.showExport)\r\n    },\r\n    /** 列表的列转导出的列 */\r\n    listCol2ExportCol(m) {\r\n      let col = {\r\n        name: m.name,\r\n        label: m.label,\r\n        align: m.align,\r\n        format: m.format,\r\n        width: 0\r\n      }\r\n\r\n      //设置导出专属vip配置~\r\n      if (m.export.width > 0) {\r\n        col.width = m.export.width\r\n      } else {\r\n        let w = parseInt(m.width)\r\n        if (w) col.width = w / 10 + 4 //默认取列表页中设置的宽度，该宽度与导出的Excel的列宽度比例大概10:1，所以这里进行一下转换, 转换后在+4，保可以保证有内边距，不会挤在一起\r\n      }\r\n      return col\r\n    },\r\n    /** 查询栏重置事件 */\r\n    onQueryBarReset() {\r\n      this.$refs.table.clearSort()\r\n      this.$emit('reset')\r\n    },\r\n    /** 删除行 */\r\n    removeRow(row) {\r\n      for (let i = 0; i < this.rows.length; i++) {\r\n        if (this.rows[i] === row) {\r\n          this.rows.splice(i, 1)\r\n          this.total--\r\n          break\r\n        }\r\n      }\r\n    },\r\n    /** 格式化 */\r\n    format(row, col) {\r\n      const val = row[col.name]\r\n      if (!col.format) return val\r\n\r\n      const format = col.format\r\n\r\n      //性别\r\n      if (format === 'sex') {\r\n        return val === 0 ? '男' : '女'\r\n      }\r\n\r\n      //日期\r\n      if (format === 'date') {\r\n        return this.$dayjs(val).format('YYYY-MM-DD')\r\n      }\r\n\r\n      //自定义函数\r\n      if (typeof format === 'function') {\r\n        return format(val, row)\r\n      }\r\n\r\n      //日期\r\n      return this.$dayjs(val).format(col.format)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      if (this.queryOnCreated) {\r\n        this.query()\r\n      }\r\n    })\r\n  },\r\n  created() {\r\n    if (this.cols) {\r\n      this.columns = this.cols.map(col => {\r\n        return this.$_.assignIn({}, def.columnInfo, col)\r\n      })\r\n    }\r\n  },\r\n  activated() {\r\n    this.doLayout()\r\n  }\r\n}\r\n</script>\r\n"]}]}