{"remainingRequest":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\netmodular-ui\\packages\\components\\login-default\\index.vue?vue&type=style&index=0&id=53147717&lang=scss","dependencies":[{"path":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\netmodular-ui\\packages\\components\\login-default\\index.vue","mtime":1706623144444},{"path":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\css-loader\\dist\\cjs.js","mtime":1706623133642},{"path":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1706623133548},{"path":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\postcss-loader\\src\\index.js","mtime":1706623132990},{"path":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1706623138425},{"path":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706623138253},{"path":"E:\\NetModular.CodeGenerator\\src\\UI\\module-codegenerator\\node_modules\\vue-loader\\lib\\index.js","mtime":1706623133543}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubm0tbG9naW4tZGVmYXVsdCA+IC5ubS1sb2dpbi1iZyB7DQogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vLi4vLi4vcHVibGljL2ltYWdlcy9sb2dpbi9iZzMuanBnJyk7DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA6KA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/netmodular-ui/packages/components/login-default","sourcesContent":["<template>\r\n  <div class=\"nm-login-default\">\r\n    <div class=\"nm-login-bg\" />\r\n    <div class=\"nm-login-box\">\r\n      <div class=\"nm-login-content\">\r\n        <div class=\"nm-login-logo\">\r\n          <img class=\"nm-login-logo-img\" :src=\"logoUrl\" />\r\n          <h1 class=\"nm-login-logo-title\">{{ title }}</h1>\r\n        </div>\r\n        <el-form ref=\"form\" :model=\"form\" :rules=\"rules\">\r\n          <el-form-item v-if=\"loginOptions.accountTypes\" prop=\"accountType\">\r\n            <el-select v-model=\"form.accountType\" placeholder=\"账户类型\">\r\n              <template v-slot:prefix>\r\n                <nm-icon name=\"project\" />\r\n              </template>\r\n              <el-option v-for=\"item in loginOptions.accountTypes\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item prop=\"userName\">\r\n            <el-input v-model=\"form.userName\" placeholder=\"用户名\">\r\n              <template v-slot:prefix>\r\n                <nm-icon name=\"user\" />\r\n              </template>\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item prop=\"password\">\r\n            <el-input type=\"password\" v-model=\"form.password\" autocomplete=\"off\" placeholder=\"密码\">\r\n              <template v-slot:prefix>\r\n                <nm-icon name=\"password\" />\r\n              </template>\r\n            </el-input>\r\n          </el-form-item>\r\n          <div v-if=\"loginOptions.verifyCode\" class=\"verifycode\">\r\n            <div class=\"verifycode-input\">\r\n              <el-form-item prop=\"verifyCode.code\">\r\n                <el-input v-model=\"form.verifyCode.code\" autocomplete=\"off\" placeholder=\"验证码\">\r\n                  <template v-slot:prefix>\r\n                    <nm-icon name=\"verifycode\"></nm-icon>\r\n                  </template>\r\n                </el-input>\r\n              </el-form-item>\r\n            </div>\r\n            <div class=\"verifycode-img\">\r\n              <img title=\"点击刷新\" :src=\"verifyCodeUrl\" @click=\"refreshVierifyCode\" />\r\n            </div>\r\n          </div>\r\n          <el-form-item style=\"text-align:right;\">\r\n            <el-button :loading=\"loading\" class=\"btn-login\" type=\"primary\" @click=\"tryLogin\">登录</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n    <div class=\"copyright\">{{ copyright }}</div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapState, mapGetters, mapActions } from 'vuex'\r\nexport default {\r\n  name: 'LoginDefault',\r\n  data() {\r\n    const _this = this\r\n    return {\r\n      verifyCodeUrl: '',\r\n      form: {\r\n        userName: '',\r\n        password: '',\r\n        accountType: 0,\r\n        verifyCode: {\r\n          id: '',\r\n          code: ''\r\n        }\r\n      },\r\n      rules: {\r\n        userName: [\r\n          {\r\n            required: true,\r\n            message: '请输入用户名',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        password: [\r\n          {\r\n            required: true,\r\n            message: '请输入密码',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        code: [\r\n          {\r\n            validator(rule, value, callback) {\r\n              if (_this.loginVerifyCode && value === '') {\r\n                callback(new Error('请输入验证码'))\r\n              } else {\r\n                callback()\r\n              }\r\n            },\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      },\r\n      loading: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters('app/config', ['logoUrl']),\r\n    ...mapState('app/config', {\r\n      title: s => s.system.title,\r\n      copyright: s => s.system.copyright,\r\n      loginOptions: s => s.component.login\r\n    }),\r\n    ...mapState('app/system', {\r\n      getVerifyCode: s => s.actions.getVerifyCode\r\n    })\r\n  },\r\n  mounted() {\r\n    if (this.loginOptions.verifyCode) {\r\n      this.refreshVierifyCode()\r\n    }\r\n    document.addEventListener('keydown', e => {\r\n      if (e.keyCode === 13) {\r\n        this.tryLogin()\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    ...mapActions('app/system', ['login']),\r\n    // 刷新验证码\r\n    async refreshVierifyCode() {\r\n      let data = await this.getVerifyCode()\r\n      this.verifyCodeUrl = data.base64String\r\n      this.form.verifyCode.id = data.id\r\n    },\r\n    // 登录\r\n    tryLogin() {\r\n      this.$refs.form.validate(async valid => {\r\n        if (valid) {\r\n          this.loading = true\r\n\r\n          this.login(this.form)\r\n            .then(data => {\r\n              // 初始化令牌\r\n              this.$store.commit('app/token/init', data)\r\n\r\n              // 跳转\r\n              let redirect = this.$route.query.redirect\r\n              if (!redirect || redirect === '') {\r\n                redirect = '/'\r\n              }\r\n\r\n              this.$router.push({\r\n                path: redirect\r\n              })\r\n            })\r\n            .finally(() => {\r\n              this.loading = false\r\n            })\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    }\r\n  },\r\n  watch: {\r\n    loginOptions: {\r\n      immediate: true,\r\n      handler(val) {\r\n        this.form.accountType = val.defaultAccountType\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.nm-login-default > .nm-login-bg {\r\n  background-image: url('../../../public/images/login/bg3.jpg');\r\n}\r\n</style>\r\n"]}]}